<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>