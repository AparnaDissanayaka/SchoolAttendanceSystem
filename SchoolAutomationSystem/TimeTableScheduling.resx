<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>